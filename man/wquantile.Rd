% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggplot.R
\name{wquantile}
\alias{wquantile}
\title{Weighted sample quantiles}
\usage{
wquantile(
  x,
  probs = seq(0, 1, 0.25),
  na.rm = FALSE,
  type = 7,
  weights = NULL,
  ...
)
}
\arguments{
\item{x}{numeric vector whose sample quantiles are wanted.
\code{NA} and \code{NaN} values are not allowed in numeric vectors unless \code{na.rm} is TRUE.}

\item{probs}{numeric vector of probabilities with values in \link{0,1}.}

\item{na.rm}{logical; if true, any \code{NA} and \code{NaN}'s are removed from \code{x} before the
quantiles are computed.}

\item{type}{numeric, 1 for no interpolation, or 7, for interpolated quantiles.
Default is 7.}

\item{weights}{numeric vector of non-negative weights, the same length as
\code{x}, or \code{NULL}. The weights are normalised to sum to 1.
If \code{NULL}, then \code{wquantile(x)} behaves the same as \code{quantile(x)}, with
equal weight for each sample value.}

\item{...}{Additional arguments, currently ignored}
}
\description{
Calculates empirical sample quantiles with optional weights, for given
probabilities. Like in \code{quantile()}, the smallest observation corresponds to
a probability of 0 and the largest to a probability of 1.
Interpolation between discrete values is done when \code{type=7}, as in \code{quantile()}.
Use \code{type=1} to only generate quantile values from the raw input samples.
}
\examples{
# Some random numbers
x <- rnorm(100)

# Plain quantiles:
quantile(x)

# Larger values given larger weight, on average shifting the quantiles upward:
wquantile(x, weights = sort(runif(length(x))))
}
\seealso{
stat_ewcdf
}
