% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scores.R
\name{proper_score}
\alias{proper_score}
\title{Calculate proper scores}
\usage{
proper_score(type, obs, ...)
}
\arguments{
\item{type}{A string indicating the type of score to calculate. One of
"se", "ae", "ds", or "interval". See Details below.}

\item{obs}{A vector of observations}

\item{...}{Additional named arguments needed for each type of score, see
Details below.}
}
\value{
A vector of calculated scores, one for each observation
}
\description{
Calculates proper scores for probabilistic predictions
}
\details{
Each score type takes additional arguments that define the prediction model
information to be used in the score calculations. Unless specified otherwise,
the extra arguments should either be scalars (applying to all the predictions)
or vectors of the same length as the \code{obs} vector.
\describe{
\item{se}{Squared error score. Requires \code{mean}, defining the prediction mean}
\item{ae}{Absolute error score. Requires \code{median}, defining the prediction median}
\item{ds}{Dawid-Sebastiani score. Requires \code{mean} and \code{sd}, defining the mean and
standard deviation of the predictions}
\item{interval}{Squared error score. Requires \code{lwr} and \code{upr}, defining the
lower and upper prediction interval endpoints, and \code{alpha}, defining the
prediction error probability targeted by the prediction intervals}
}
The scores \eqn{S_{type}(F_i,y_i)}{S_type(F_i,y_i)} are defined as in the lecture notes,
with \code{obs[i]} equal to \eqn{y_i} and each prediction distribution
\eqn{F_i} defined by additional named arguments.
}
\examples{
# Five realisations of N(3, 3^2)
obs <- rnorm(5, mean = 3, sd = 3)

# One prediction for each observation. Only one of the predictions describes
# the true model
F_mean <- 1:5
F_median <- 1:5
F_sd <- 1:5
F_lwr <- F_mean - F_sd * qnorm(0.9)
F_upr <- F_mean - F_sd * qnorm(0.1)

# Compute the scores
data.frame(
  se = proper_score("se", obs, mean = F_mean),
  ae = proper_score("ae", obs, median = F_median),
  ds = proper_score("ds", obs, mean = F_mean, sd = F_sd),
  interval = proper_score("interval", obs,
                          lwr = F_lwr, upr = F_upr, alpha = 0.2)
)
}
